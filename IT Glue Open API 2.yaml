swagger: '2.0'
info:
  version: 1.0.0
  title: IT Glue
  description: |-
    OpenAPI 2.0 / Swagger Definition for IT Glue API Endpoints

    CopyLeft 2021 - ZetaOne, Inc
    Author: Jeremy G Hodge mailto:jeremy.hodge@zetaone.com

    ***********************************
    ***    AS-IS and NO WARRANTY    ***
    ***    USE AT YOUR OWN RISK!    ***
    ***********************************

    For API  support, contact IT Glue directly. 
    No support for this file is available from ZetaOne or Jeremy Hodge

    Formatted for compatibility with Microsoft's Swagger Editor for
      Micrsoft Power Automate custom connector.

    Issues of note with compatibility:
     - Microsoft's editor does not support path template parameters
       being defined on the global path for a set of operations. Each
       operation must define its path tempate parameters locally (but
       can be a $ref).   
  contact:
    name: IT Glue
    url: 'http://www.itglue.com'
    email: support@itglue.com
  termsOfService: 'https://api.itglue.com/developer'
host: api.itglue.com
schemes:
  - https
consumes: []
produces:
  - application/json
paths:
  /configuration_types:
    get:
      summary: List Configuration Types
      description: Returns a list of configuration types in your account.
      operationId: List_configuration_types
      parameters:
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/page-size'
        - $ref: '#/parameters/page-number'
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                      description: attributes
                description: data
              meta:
                type: object
                properties:
                  current-page:
                    type: integer
                    format: int32
                    description: current-page
                  next-page:
                    type: integer
                    format: int32
                    description: next-page
                  prev-page:
                    type: integer
                    format: int32
                    description: prev-page
                  total-pages:
                    type: integer
                    format: int32
                    description: total-pages
                  total-count:
                    type: integer
                    format: int32
                    description: total-count
                  filters:
                    type: object
                    properties: {}
                    description: filters
                description: meta
              links:
                type: object
                properties:
                  self:
                    type: string
                    description: self
                  first:
                    type: string
                    description: first
                  prev:
                    type: string
                    description: prev
                  next:
                    type: string
                    description: next
                  last:
                    type: string
                    description: last
                description: links
          examples:
            Example:
              data:
                - id: string
                  type: string
                  attributes:
                    name: string
                    created-at: string
                    updated-at: string
              meta:
                current-page: 0
                next-page: 0
                prev-page: 0
                total-pages: 0
                total-count: 0
                filters: {}
              links:
                self: string
                first: string
                prev: string
                next: string
                last: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties: {}
      tags:
        - Configuration Types
    post:
      responses:
        '200':
          description: default
          schema:
            description: ''
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      configurations-count:
                        type: number
                      created-at:
                        type: string
                        minLength: 1
                      updated-at:
                        type: string
                        minLength: 1
                    required:
                      - name
                      - configurations-count
                      - created-at
                      - updated-at
                required:
                  - id
                  - type
                  - attributes
            required:
              - data
          examples:
            Example:
              data:
                id: string
                type: string
                attributes:
                  name: string
                  configurations-count: 0
                  created-at: string
                  updated-at: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties: {}
        '403':
          description: Forbidden
          schema:
            type: object
            properties: {}
        '415':
          description: Unsupported Media Type
          schema:
            type: object
            properties: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          schema:
            type: object
            properties: {}
      summary: Create a Configuration Type
      description: Creates a new configuration type in your account. Returns the created object if successful.
      operationId: Post_configuration_type
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                    title: type
                    x-ms-visibility: internal
                    default: configuration-types
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                    description: attributes
                description: data
                required:
                  - type
            required:
              - data
          x-examples:
            Example:
              data:
                type: configuration-types
                attributes:
                  name: Power
      tags:
        - Configuration Types
  '/configuration_types/{object_id}':
    get:
      summary: Get a Configuration Type
      operationId: Get_configuration_type
      description: Returns the details of an existing configuration type.
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: OK
          schema:
            description: ''
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      configurations-count:
                        type: number
                      created-at:
                        type: string
                        minLength: 1
                      updated-at:
                        type: string
                        minLength: 1
                    required:
                      - name
                      - configurations-count
                      - created-at
                      - updated-at
                required:
                  - id
                  - type
                  - attributes
            required:
              - data
          examples:
            Example:
              data:
                id: string
                type: string
                attributes:
                  name: string
                  configurations-count: 0
                  created-at: string
                  updated-at: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties: {}
        '404':
          description: Not Found
          schema:
            type: object
            properties: {}
      tags:
        - Configuration Types
    parameters: []
  /flexible_asset_types:
    get:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name
                        description:
                          type: string
                          description: description
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                        icon:
                          type: string
                          description: icon
                        enabled:
                          type: boolean
                          description: enabled
                      description: attributes
                    relationships:
                      type: object
                      properties: {}
                      description: relationships
                description: data
      summary: List Flexible Asset Types
      operationId: List_flexible_asset_types
      parameters:
        - $ref: '#/parameters/page-size'
        - $ref: '#/parameters/page-number'
      description: Returns a list of flexible asset types in your account.
      tags:
        - Flexible Asset Types
    post:
      responses:
        '200':
          description: default
          schema: {}
      summary: Create a Flexible Asset Type
      operationId: Post_flexible_asset_type
      description: Creates a new flexible asset type in your account. Returns the created object if successful. Use the nested relationships route to add multiple flexible asset fields to a flexible asset type in bulk.
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                    title: ''
                    x-ms-visibility: internal
                    default: flexible_asset_types
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      description:
                        type: string
                        description: description
                      icon:
                        type: string
                        description: icon
                      show-in-menu:
                        type: boolean
                        description: show-in-menu
                    description: attributes
                  relationships:
                    type: object
                    properties:
                      flexible-asset-fields:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: type
                                  title: ''
                                  x-ms-visibility: internal
                                  default: flexible_asset_fields
                                attributes:
                                  type: object
                                  properties:
                                    order:
                                      type: integer
                                      format: int32
                                      description: order
                                    name:
                                      type: string
                                      description: name
                                    kind:
                                      type: string
                                      description: kind
                                    hint:
                                      type: string
                                      description: hint
                                    tag-type:
                                      type: string
                                      description: tag-type
                                    required:
                                      type: boolean
                                      description: required
                                    show-in-list:
                                      type: boolean
                                      description: show-in-list
                                    default-value:
                                      type: string
                                      description: default-value
                                    use-for-title:
                                      type: boolean
                                      description: use-for-title
                                  description: attributes
                              required:
                                - type
                            description: data
                        description: flexible-asset-fields
                        required:
                          - data
                    description: relationships
                    required:
                      - flexible-asset-fields
                description: data
                required:
                  - type
                  - relationships
            required:
              - data
      tags:
        - Flexible Asset Types
  '/flexible_asset_types/{parent_id}/relationships/flexible_asset_fields':
    get:
      parameters:
        - $ref: '#/parameters/parent_id'
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        order:
                          type: integer
                          format: int32
                          description: order
                        name:
                          type: string
                          description: name
                        kind:
                          type: string
                          description: kind
                        hint:
                          type: string
                          description: hint
                        decimals:
                          type: integer
                          format: int32
                          description: decimals
                        tag-type:
                          type: string
                          description: tag-type
                        required:
                          type: boolean
                          description: required
                        use-for-title:
                          type: boolean
                          description: use-for-title
                        expiration:
                          type: boolean
                          description: expiration
                        show-in-list:
                          type: boolean
                          description: show-in-list
                        name-key:
                          type: string
                          description: name-key
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                        flexible-asset-type-id:
                          type: integer
                          format: int32
                          description: flexible-asset-type-id
                        default-value:
                          type: string
                          description: default-value
                      description: attributes
                    relationships:
                      type: object
                      properties:
                        flexible-asset-type:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: id
                                type:
                                  type: string
                                  description: type
                              description: data
                          description: flexible-asset-type
                      description: relationships
                description: data
      summary: List Flexible Asset Fields
      description: Returns a list of fields for the specified flexible asset type.
      operationId: List_flexible_asset_fields
      tags:
        - Flexible Asset Types
        - Flexible Asset Fields
  /organizations:
    get:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        psa-integration:
                          type: string
                          description: psa-integration
                        name:
                          type: string
                          description: name
                        alert:
                          type: string
                          description: alert
                        description:
                          type: string
                          description: description
                        organization-type-id:
                          type: integer
                          format: int32
                          description: organization-type-id
                        organization-type-name:
                          type: string
                          description: organization-type-name
                        organization-status-id:
                          type: integer
                          format: int32
                          description: organization-status-id
                        organization-status-name:
                          type: string
                          description: organization-status-name
                        my-glue-account-id:
                          type: string
                          description: my-glue-account-id
                        primary:
                          type: boolean
                          description: primary
                        quick-notes:
                          type: string
                          description: quick-notes
                        short-name:
                          type: string
                          description: short-name
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                        my-glue-account-status:
                          type: string
                          description: my-glue-account-status
                        logo:
                          type: string
                          description: logo
                      description: attributes
                    relationships:
                      type: object
                      properties:
                        adapters-resources:
                          type: object
                          properties:
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    description: id
                                  type:
                                    type: string
                                    description: type
                              description: data
                          description: adapters-resources
                      description: relationships
                description: data
              meta:
                type: object
                properties:
                  current-page:
                    type: integer
                    format: int32
                    description: current-page
                  next-page:
                    type: integer
                    format: int32
                    description: next-page
                  prev-page:
                    type: integer
                    format: int32
                    description: prev-page
                  total-pages:
                    type: integer
                    format: int32
                    description: total-pages
                  total-count:
                    type: integer
                    format: int32
                    description: total-count
                  filters:
                    type: object
                    properties:
                      id:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items: {}
                            description: permitted-values
                        description: id
                      name:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items: {}
                            description: permitted-values
                        description: name
                      organization-type-id:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items:
                              type: object
                              properties:
                                value:
                                  type: integer
                                  format: int32
                                  description: value
                                data:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: name
                                  description: data
                            description: permitted-values
                        description: organization-type-id
                      organization-status-id:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items:
                              type: object
                              properties:
                                value:
                                  type: integer
                                  format: int32
                                  description: value
                                data:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: name
                                  description: data
                            description: permitted-values
                        description: organization-status-id
                      created-at:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items: {}
                            description: permitted-values
                        description: created-at
                      updated-at:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items: {}
                            description: permitted-values
                        description: updated-at
                      my-glue-account-id:
                        type: object
                        properties:
                          permitted-values:
                            type: array
                            items: {}
                            description: permitted-values
                        description: my-glue-account-id
                    description: filters
                description: meta
              links:
                type: object
                properties:
                  self:
                    type: string
                    description: self
                  first:
                    type: string
                    description: first
                  prev:
                    type: string
                    description: prev
                  next:
                    type: string
                    description: next
                  last:
                    type: string
                    description: last
                description: links
      summary: List Organizations
      description: Returns a list of organizations in your account.
      operationId: List_organizations
      parameters:
        - name: 'filter[id]'
          in: query
          required: false
          type: integer
        - name: 'filter[exclude][id]'
          in: query
          required: false
          type: integer
        - name: 'filter[name]'
          in: query
          required: false
          type: string
        - name: 'filter[exclude][name]'
          in: query
          required: false
          type: string
        - name: 'filter[organization_type_id]'
          in: query
          required: false
          type: integer
        - name: 'filter[exclude][organization_type_id]'
          in: query
          required: false
          type: integer
        - name: 'filter[organization_status_id]'
          in: query
          required: false
          type: integer
        - name: 'filter[exclude][organization_status_id]'
          in: query
          required: false
          type: integer
        - name: 'filter[created_at]'
          in: query
          required: false
          type: string
        - name: 'filter[updated_at]'
          in: query
          required: false
          type: string
        - name: 'filter[my_glue_account_id]'
          in: query
          required: false
          type: integer
        - name: 'filter[range][my_glue_account_id]'
          in: query
          required: false
          type: string
        - name: 'filter[psa_id]'
          in: query
          required: false
          type: string
        - name: 'filter[psa_integration_type]'
          in: query
          required: false
          type: string
          enum:
            - manage
            - autotask
            - tigerpaw
            - kaseya-bms
            - pulseway-psa
            - vorex
        - name: 'filter[group_id]'
          in: query
          required: false
          type: integer
        - name: sort
          in: query
          type: string
          required: false
          enum:
            - name
            - id
            - created_at
            - updated_at
            - organization_status_name
            - organization_type_name
            - short_name
            - my_glue_account_id
            - '-name'
            - '-id'
            - '-created_at'
            - '-updated_at'
            - '-organization_status_name'
            - '-organization_type_name'
            - '-short_name'
            - '-my_glue_account_id'
          description: 'Sort the returned list ascending by the selected field, or descending if the negative field selected (e.g. -name) '
        - name: page-size
          in: query
          required: false
          type: integer
        - name: page-number
          in: query
          required: false
          type: integer
        - name: include
          in: query
          required: false
          type: string
          enum:
            - adapters_resources
            - attachments
      tags:
        - Organizations
    post:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: id
                      name:
                        type: string
                        description: name
                      alert:
                        type: string
                        description: alert
                      description:
                        type: string
                        description: description
                      organization-type-id:
                        type: integer
                        format: int32
                        description: organization-type-id
                      organization-status-id:
                        type: integer
                        format: int32
                        description: organization-status-id
                      quick-notes:
                        type: string
                        description: quick-notes
                      short_name:
                        type: string
                        description: short_name
                    description: attributes
                description: data
      summary: Create an Organization
      operationId: Post_organization
      description: Creates an organization. Returns the created object if successful.
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                    title: ''
                    x-ms-visibility: internal
                    default: organizations
                  attributes:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: id
                      name:
                        type: string
                        description: name
                        title: ''
                      alert:
                        type: string
                        description: alert
                      description:
                        type: string
                        description: description
                      organization-type-id:
                        type: integer
                        format: int32
                        description: organization-type-id
                      organization-status-id:
                        type: integer
                        format: int32
                        description: organization-status-id
                      quick-notes:
                        type: string
                        description: quick-notes
                      short_name:
                        type: string
                        description: short_name
                    description: attributes
                    required:
                      - name
                description: data
                required:
                  - attributes
                  - type
            required:
              - data
      tags:
        - Organizations
  '/organizations/{object_id}':
    get:
      responses:
        '200':
          description: default
          schema: {}
      summary: Get an Organization
      description: Returns the details of an existing organization.
      operationId: Get-organization
      parameters:
        - $ref: '#/parameters/object_id'
        - name: include
          in: query
          required: false
          type: string
          description: Comma separated list of values to expand and include the related items. Values must be one of adapters_resources or attachments
          format: string
      tags:
        - Organizations
    patch:
      responses:
        '200':
          description: default
          schema: {}
      summary: Update an Organization
      description: 'Updates the details of an existing organization. Returns 422 Bad Request error if trying to update an externally synced record on attributes other than: alert, description, quick_notes. A PATCH request does not require that the entire object resource with all of its attributes be enclosed. Any attributes you don''t specify will remain unchanged.'
      operationId: Patch-organization
      parameters:
        - $ref: '#/parameters/object_id'
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: Record Type
                    title: type
                    x-ms-visibility: internal
                    default: organizations
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      alert:
                        type: string
                        description: alert
                      description:
                        type: string
                        description: description
                      short_name:
                        type: string
                        description: short_name
                      organization-type-id:
                        type: integer
                        format: int32
                        description: organization-type-id
                      organization-status-id:
                        type: integer
                        format: int32
                        description: organization-status-id
                      quick-notes:
                        type: string
                        description: quick-notes
                      short-name:
                        type: string
                        description: short-name
                    description: attributes
                description: data
                required:
                  - type
            required:
              - data
      tags:
        - Organizations
    parameters: []
  /organization_types:
    get:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                        synced:
                          type: boolean
                          description: synced
                      description: attributes
                description: data
              meta:
                type: object
                properties:
                  current-page:
                    type: integer
                    format: int32
                    description: current-page
                  next-page:
                    type: integer
                    format: int32
                    description: next-page
                  prev-page:
                    type: integer
                    format: int32
                    description: prev-page
                  total-pages:
                    type: integer
                    format: int32
                    description: total-pages
                  total-count:
                    type: integer
                    format: int32
                    description: total-count
                  filters:
                    type: object
                    properties: {}
                    description: filters
                description: meta
              links:
                type: object
                properties:
                  self:
                    type: string
                    description: self
                  first:
                    type: string
                    description: first
                  prev:
                    type: string
                    description: prev
                  next:
                    type: string
                    description: next
                  last:
                    type: string
                    description: last
                description: links
      summary: List Organization Types
      description: Returns a list of organizations in your account.
      operationId: List-organization-types
      parameters:
        - name: 'filter[name]'
          in: query
          required: false
          type: string
        - name: sort
          in: query
          required: false
          type: string
          enum:
            - name
            - id
            - created_at
            - updated_at
        - name: page-size
          in: query
          required: false
          type: integer
        - name: page-number
          in: query
          required: false
          type: integer
      tags:
        - Organization Types
    post:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    description: id
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      created-at:
                        type: string
                        description: created-at
                      updated-at:
                        type: string
                        description: updated-at
                    description: attributes
                description: data
      summary: Create an Organization Type
      description: Creates a new organization type in your account. Returns the created object if successful.
      operationId: Post-organization-type
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                    title: ''
                    x-ms-visibility: internal
                    default: organizational-types
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                    description: attributes
                description: data
                required:
                  - type
            required:
              - data
      tags:
        - Organization Types
  '/organization_types/{object_id}':
    get:
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    description: id
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      created-at:
                        type: string
                        description: created-at
                      updated-at:
                        type: string
                        description: updated-at
                    description: attributes
                description: data
      summary: Get an Organization Type
      description: Returns the details of an existing organization type.
      operationId: Get-organization-type
      tags:
        - Organization Types
    patch:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    description: id
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      created-at:
                        type: string
                        description: created-at
                      updated-at:
                        type: string
                        description: updated-at
                    description: attributes
                description: data
      summary: Update an Organization Type
      description: Updates an organization type in your account. Returns 422 Bad Request error if trying to update an externally synced record.
      operationId: Patch-organization-type
      parameters:
        - $ref: '#/parameters/object_id'
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                    description: attributes
                description: data
      tags:
        - Organization Types
    parameters: []
  /organization_statuses:
    get:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                        synced:
                          type: boolean
                          description: synced
                      description: attributes
                description: data
              meta:
                type: object
                properties:
                  current-page:
                    type: integer
                    format: int32
                    description: current-page
                  next-page:
                    type: integer
                    format: int32
                    description: next-page
                  prev-page:
                    type: integer
                    format: int32
                    description: prev-page
                  total-pages:
                    type: integer
                    format: int32
                    description: total-pages
                  total-count:
                    type: integer
                    format: int32
                    description: total-count
                  filters:
                    type: object
                    properties: {}
                    description: filters
                description: meta
              links:
                type: object
                properties:
                  self:
                    type: string
                    description: self
                  first:
                    type: string
                    description: first
                  prev:
                    type: string
                    description: prev
                  next:
                    type: string
                    description: next
                  last:
                    type: string
                    description: last
                description: links
      summary: List Organization Statuses
      operationId: List-organization-statuses
      description: Returns a list of the organization statuses in your account.
      parameters:
        - name: 'filter[name]'
          in: query
          type: string
          required: false
          description: Filter the list by the Name field (exact match) of the organization status.
        - name: sort
          in: query
          type: string
          enum:
            - name
            - id
            - created_at
            - updated_at
            - '-name'
            - '-id'
            - '-created_at'
            - '-updated_at'
          description: 'Sort the returned list ascending by the selected field, or descending if the negative field selected (e.g. -name) '
        - name: page-size
          default: 1000
          in: query
          type: integer
          required: false
          format: int32
        - name: page-number
          default: 1
          in: query
          type: integer
          required: false
          format: int32
      tags:
        - Organization Statuses
    post:
      responses:
        '200':
          description: default
          schema: {}
      summary: Create an Organization Status
      description: Creates a new organization status in your account. Returns the created object if successful.
      operationId: Post-organization-status
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                    title: ''
                    x-ms-visibility: internal
                    default: organization-statuses
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                    description: attributes
                description: data
                required:
                  - type
            required:
              - data
      tags:
        - Organization Statuses
  '/organization_statuses/{object_id}':
    get:
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    description: id
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      created-at:
                        type: string
                        description: created-at
                      updated-at:
                        type: string
                        description: updated-at
                    description: attributes
                description: data
      summary: Get an Organization Status
      description: Returns the details of an existing organization status.
      operationId: Get-organization-status
      tags:
        - Organization Statuses
    patch:
      responses:
        '200':
          description: default
          schema: {}
      summary: Update an Organization Status
      description: Updates an organization status in your account. Returns 422 Bad Request error if trying to update an externally synced record.
      operationId: Patch-organization-status
      parameters:
        - $ref: '#/parameters/object_id'
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    description: type
                    title: ''
                    x-ms-visibility: internal
                    default: organization_statuses
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                    description: attributes
                description: data
                required:
                  - type
            required:
              - data
      tags:
        - Organization Statuses
    parameters: []
  '/flexible_asset_types/{object_id}':
    get:
      responses:
        '200':
          description: default
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    description: id
                  type:
                    type: string
                    description: type
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name
                      description:
                        type: string
                        description: description
                      created-at:
                        type: string
                        description: created-at
                      updated-at:
                        type: string
                        description: updated-at
                      icon:
                        type: string
                        description: icon
                      show-in-menu:
                        type: boolean
                        description: show-in-menu
                    description: attributes
                  relationships:
                    type: object
                    properties:
                      flexible-asset-fields:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: id
                                type:
                                  type: string
                                  description: type
                            description: data
                        description: flexible-asset-fields
                    description: relationships
                description: data
              included:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                      description: id
                    type:
                      type: string
                      description: type
                    attributes:
                      type: object
                      properties:
                        flexible-asset-type-id:
                          type: integer
                          format: int32
                          description: flexible-asset-type-id
                        order:
                          type: integer
                          format: int32
                          description: order
                        name:
                          type: string
                          description: name
                        kind:
                          type: string
                          description: kind
                        hint:
                          type: string
                          description: hint
                        decimals:
                          type: integer
                          format: int32
                          description: decimals
                        default-value:
                          type: string
                          description: default-value
                        tag-type:
                          type: string
                          description: tag-type
                        required:
                          type: boolean
                          description: required
                        use-for-title:
                          type: boolean
                          description: use-for-title
                        expiration:
                          type: boolean
                          description: expiration
                        show-in-list:
                          type: boolean
                          description: show-in-list
                        name-key:
                          type: string
                          description: name-key
                        created-at:
                          type: string
                          description: created-at
                        updated-at:
                          type: string
                          description: updated-at
                      description: attributes
                    relationships:
                      type: object
                      properties:
                        flexible-asset-type:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: id
                                type:
                                  type: string
                                  description: type
                              description: data
                          description: flexible-asset-type
                      description: relationships
                description: included
      summary: Get a Flexible Asset Type
      description: Returns the details of an existing flexible asset type.
      operationId: Get_flexible_asset_type
      parameters:
        - $ref: '#/parameters/object_id'
        - name: include
          in: query
          required: false
          type: string
          enum:
            - flexible_asset_fields
      tags:
        - Flexible Asset Types
    parameters: []
  '/{resource_type}/{resource_id}/relationships/attachments':
    post:
      summary: Create an Attachment for a particular Resource
      operationId: Post_attachment
      tags:
        - Attachments
      responses:
        '200':
          description: OK
          schema:
            description: ''
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      attachment-file-name:
                        type: string
                        minLength: 1
                      attachment-content-type:
                        type: string
                        minLength: 1
                      attachment-file-size:
                        type: number
                      ext:
                        type: string
                        minLength: 1
                      viewable:
                        type: boolean
                      download-url:
                        type: string
                        minLength: 1
                      created-at:
                        type: string
                        minLength: 1
                      updated-at:
                        type: string
                        minLength: 1
                    required:
                      - name
                      - attachment-file-name
                      - attachment-content-type
                      - attachment-file-size
                      - ext
                      - viewable
                      - download-url
                      - created-at
                      - updated-at
                required:
                  - id
                  - type
                  - attributes
            required:
              - data
          examples:
            Example:
              data:
                id: string
                type: string
                attributes:
                  name: string
                  attachment-file-name: string
                  attachment-content-type: string
                  attachment-file-size: 0
                  ext: string
                  viewable: true
                  download-url: string
                  created-at: string
                  updated-at: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties: {}
        '403':
          description: Forbidden
          schema:
            type: object
            properties: {}
        '415':
          description: Unsupported Media Type
          schema:
            type: object
            properties: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          schema:
            type: object
            properties: {}
      description: |-
        Attaches a file to the asset specified in the ID parameter. Returns the created object if successful. Can also be used to add multiple attachments to an asset in bulk.

        Attachments are uploaded by including media data on the asset the attachment is associated with. Attachments can be encoded and passed in JSON format for direct upload, in which case the file has to be strict encoded. You need to convert it using something like www.freeformatter.com/base64-encoder.html. This produces a string of text that goes into the content field. Note that the name of the attachment displayed on the asset view screen will be taken from the file_name attribute.
      parameters:
        - in: path
          name: resource_type
          type: string
          enum:
            - checklists
            - checklist_templates
            - configurations
            - contacts
            - documents
            - domains
            - locations
            - passwords
            - ssl_certificates
            - flexible_assets
            - tickets
          required: true
          description: The resource type of the parent resource
        - in: path
          name: resource_id
          type: integer
          description: The resource id of the parent resource.
          required: true
        - in: body
          name: body
          schema:
            description: ''
            type: object
            properties:
              data:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      minLength: 1
                    attributes:
                      type: object
                      properties:
                        attachment:
                          type: object
                          properties:
                            content:
                              type: string
                              minLength: 1
                            file_name:
                              type: string
                              minLength: 1
                          required:
                            - content
                            - file_name
                      required:
                        - attachment
            required:
              - data
          x-examples:
            Single Attachment:
              data:
                type: attachments
                attributes:
                  attachment:
                    content: R0lGODlhABAQAIAAAAAAAP///yH7BAEAAAAALAAAAAAEAABAAAIBRAA5
                    file_name: test.png
            Multiple Attachments:
              data:
                - type: attachments
                  attributes:
                    attachment:
                      content: R0lGODlhABAQAIAAAAAAAP///yH7BAEAAAAALAAAAAAEAABAAAIBRAA5
                      file_name: test-1.png
                - type: attachments
                  attributes:
                    content: R0lGODlhABAQAIAAAAAAAP///yH7BAEAAAAALAAAAAAEAABAAAIBRAA5
                    file_name: test-2.png
          description: 'The request body must contain a JSON object. To create multiple attachments, provide an array of JSON objects.'
    delete:
      summary: Delete multiple Attachments for a particular Resource
      operationId: Delete_attachments
      tags:
        - Attachments
      responses:
        '200':
          description: OK
          schema:
            description: ''
            type: object
            properties:
              Data:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      attachment-file-name:
                        type: string
                        minLength: 1
                      attachment-content-type:
                        type: string
                        minLength: 1
                      attachment-file-size:
                        type: number
                      ext:
                        type: string
                        minLength: 1
                      viewable:
                        type: boolean
                      download-url:
                        type: string
                        minLength: 1
                      created-at:
                        type: string
                        minLength: 1
                      updated-at:
                        type: string
                        minLength: 1
                    required:
                      - name
                      - attachment-file-name
                      - attachment-content-type
                      - attachment-file-size
                      - ext
                      - viewable
                      - download-url
                      - created-at
                      - updated-at
                required:
                  - id
                  - type
                  - attributes
            required:
              - Data
          examples:
            Example:
              Data:
                id: string
                type: string
                attributes:
                  name: string
                  attachment-file-name: string
                  attachment-content-type: string
                  attachment-file-size: 0
                  ext: string
                  viewable: true
                  download-url: string
                  created-at: string
                  updated-at: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties: {}
        '404':
          description: Not Found
          schema:
            type: object
            properties: {}
        '415':
          description: Bad Content Type
          schema:
            type: object
            properties: {}
        '422':
          description: Bad Request
          schema:
            type: object
            properties: {}
      description: Deletes one or more specified attachments. Returns the deleted attachments and a 200 status code if successful.
      parameters:
        - in: path
          name: resource_type
          type: string
          enum:
            - checklists
            - checklist_templates
            - configurations
            - contacts
            - documents
            - domains
            - locations
            - passwords
            - ssl_certificates
            - flexible_assets
            - tickets
          required: true
          description: The resource type of the parent resource
        - in: path
          name: resource_id
          type: integer
          description: The resource id of the parent resource.
          required: true
        - in: body
          name: body
          schema:
            description: ''
            type: object
            properties:
              data:
                type: object
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      minLength: 1
                    attributes:
                      type: object
                      properties:
                        id:
                          type: number
                      required:
                        - id
            required:
              - data
          x-examples:
            Multiple Attachment Delete:
              data:
                - type: attachments
                  attributes:
                    id: 2
                - type: attachments
                  attributes:
                    id: 4
            Single Attachment Delete:
              data:
                type: attachments
                attributes:
                  id: 2
          description: 'Data may contain a single object to delete one attachment, or an array of objects to delete multiple attachments.'
  '/{resource_type}/{resource_id}/relationships/attachments/{object_id}':
    patch:
      summary: Update an Attachment for a particular Resource
      operationId: Patch_attachment
      tags:
        - Attachments
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          schema:
            type: object
            properties: {}
        '403':
          description: Forbidden
          schema:
            type: object
            properties: {}
        '415':
          description: Bad Content Type
          schema:
            type: object
            properties: {}
        '422':
          description: Bad Request
          schema:
            type: object
            properties: {}
      description: Updates the details of an existing attachment. Only the attachment name that is displayed on the asset view screen can be changed. The original file_name can't be changed.
      parameters:
        - $ref: '#/parameters/object_id'
        - in: path
          name: resource_type
          type: string
          enum:
            - checklists
            - checklist_templates
            - configurations
            - contacts
            - documents
            - domains
            - locations
            - passwords
            - ssl_certificates
            - flexible_assets
            - tickets
          required: true
          description: The resource type of the parent resource
        - in: path
          name: resource_id
          type: integer
          description: The resource id of the parent resource.
          required: true
        - in: body
          name: body
          schema:
            description: ''
            type: object
            properties:
              data:
                type: object
                required:
                  - type
                  - attributes
                properties:
                  type:
                    type: string
                    minLength: 1
                    enum:
                      - attachments
                  attributes:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        minLength: 1
            required:
              - data
          description: The request body must contain a JSON object.
          x-examples:
            Example:
              data:
                type: attachments
                attributes:
                  name: new_name.png
  /configuration_interfaces:
    post:
      summary: Create a Configuration Interface
      operationId: Post_configuration_interface
      responses:
        '200':
          description: OK
      tags:
        - Configuration Interfaces
      description: Creates a new configuration interface under the configuration specified in the ID parameter. Returns the created object if successful. Use the nested relationships route to add multiple configuration interfaces to a configuration in bulk.
    patch:
      summary: Update multiple Configuration Interfaces
      operationId: Patch_configuration_interfaces
      responses:
        '200':
          description: OK
      tags:
        - Configuration Interfaces
      description: |-
        Updates a list of configuration interfaces, also known as bulk updating. Bulk updates using a nested relationships route are not supported. Returns 422 Bad Request error if trying to update an externally synced, primary IP address.

        The bulk update PATCH format is one that is similar to the response returned from a GET on a list resource. It will accept a partial representation of objects, as long as the required parameters are present. Any attributes you don't specify will remain unchanged.
  '/configuration_interfaces/{object_id}':
    get:
      parameters:
        - $ref: '#/parameters/object_id'
      summary: Get a Configuration Interface
      tags:
        - Configuration Interfaces
      responses:
        '200':
          description: default
      operationId: Get_configuration_interface_global
      description: Returns the details of an existing configuration interface.
    patch:
      parameters:
        - $ref: '#/parameters/object_id'
      summary: Update a Configuration Interface
      operationId: Patch_configuration_interface
      responses:
        '200':
          description: OK
      tags:
        - Configuration Interfaces
      description: |-
        Updates the details of an existing configuration interface. Returns 422 Bad Request error if trying to update an externally synced, primary IP address.

        A PATCH request does not require that the entire object resource with all of its attributes be enclosed. Any attributes you don't specify will remain unchanged.
  /configuration_statuses:
    get:
      summary: List Configuration Statuses
      tags:
        - Configuration Statuses
      responses:
        '200':
          description: default
      operationId: List_configuration_statuses
      description: Returns a list of the configuration statuses in your account.
    post:
      summary: Create a Configuration Status
      operationId: Post_configuration_status
      responses:
        '200':
          description: OK
      tags:
        - Configuration Statuses
      description: Creates a new configuration status in your account. Returns the created object if successful.
  '/configuration_statuses/{object_id}':
    get:
      summary: Get a Configuration Status
      tags:
        - Configuration Statuses
      responses:
        '200':
          description: default
      operationId: Get_configuration_status
      description: Returns the details of an existing configuration status.
      parameters:
        - $ref: '#/parameters/object_id'
    patch:
      summary: Update a Configuration Status
      operationId: Patch_configuration_status
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: OK
      tags:
        - Configuration Statuses
      description: Updates a configuration status in your account. Returns 422 Bad Request error if trying to update an externally synced record.
  /configurations:
    get:
      summary: List Configurations
      tags:
        - Configurations
      responses:
        '200':
          description: default
      operationId: Get_configurations
      description: Returns a list of configurations for all organizations or for a specified organization.
    post:
      summary: Create a Configuration
      operationId: Post_configuration
      responses:
        '200':
          description: OK
      tags:
        - Configurations
      description: Creates a configuration under the organization specified in the ID parameter. Returns the created object if successful. Use the nested relationships route to add multiple configurations to an organization in bulk.
    patch:
      summary: Update multiple Configurations
      operationId: Patch_configurations
      responses:
        '200':
          description: OK
      tags:
        - Configurations
      description: |-
        Updates a list of items, also known as bulk updating. Bulk updates using a nested relationships route are not supported. Returns 403 Forbidden error if any relationships are present in the request. Returns 422 Bad Request error if trying to update an externally synced record on attributes other than: archived, asset_tag, notes, purchased_at, restricted, serial_number, warranty_expires_at

        The bulk update PATCH format is one that is similar to the response returned from a GET on a list resource. It will accept a partial representation of objects, as long as the required parameters are present. Any attributes you don't specify will remain unchanged.
    delete:
      summary: Delete multiple Configurations
      operationId: Delete_configurations
      responses:
        '200':
          description: OK
      tags:
        - Configurations
      description: Deletes one or more specified configurations. Returns the deleted configurations and a 200 status code if successful.
  '/configurations/{object_id}':
    get:
      summary: Get a Configuration
      parameters:
        - $ref: '#/parameters/object_id'
      tags:
        - Configurations
      responses:
        '200':
          description: default
      operationId: Get_configuration
      description: Returns the details of an existing configuration.
    patch:
      summary: Update a Configuration
      operationId: Patch_configuration
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: OK
      tags:
        - Configurations
      description: |-
        Updates the details of an existing configuration. Returns 403 Forbidden error if any relationships are present in the request. Returns 422 Bad Request error if trying to update an externally synced record on attributes other than: archived, asset_tag, notes, purchased_at, restricted, serial_number, warranty_expires_at

        A PATCH request does not require that the entire object resource with all of its attributes be enclosed. Any attributes you don't specify will remain unchanged.
  /contact_types:
    get:
      summary: List Contact Types
      tags:
        - Contact Types
      responses:
        '200':
          description: default
      operationId: List_contact_types
      description: Returns a list of contact types in your account.
    post:
      summary: Create a Contact Type
      operationId: Post_contact_type
      responses:
        '200':
          description: OK
      tags:
        - Contact Types
      description: Creates a new contact type in your account. Returns the created object if successful.
  '/contact_types/{object_id}':
    get:
      summary: Get a Contact Type
      tags:
        - Contact Types
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: default
      operationId: Get_contact_type
      description: Returns the details of an existing contact type.
    patch:
      summary: Update a Contact Type
      operationId: Patch_contact_type
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: OK
      tags:
        - Contact Types
      description: Updates a contact type in your account. Returns 422 Bad Request error if trying to update an externally synced record.
  /contacts:
    get:
      summary: List Contacts
      tags:
        - Contacts
      responses:
        '200':
          description: default
      operationId: List_contacts
      description: Returns a list of contacts for all organizations or for a specified organization.
    post:
      summary: Create a Contact
      operationId: Post_contact
      responses:
        '200':
          description: OK
      tags:
        - Contacts
      description: Creates a contact under the organization specified in the ID parameter. Returns the created object if successful. Use the nested relationships route to add multiple contacts to an organization in bulk.
    patch:
      summary: Update multiple Contacts
      operationId: Patch_contacts
      responses:
        '200':
          description: OK
      tags:
        - Contacts
      description: |-
        Updates a list of contacts, also known as bulk updating. Bulk updates using a nested relationships route are not supported. Returns 422 Bad Request error if trying to update an externally synced record.

        The bulk update PATCH format is one that is similar to the response returned from a GET on a list resource. It will accept a partial representation of objects, as long as the required parameters are present. Any attributes you don't specify will remain unchanged.
    delete:
      summary: Delete multiple Contacts
      operationId: Delete_contacts
      responses:
        '200':
          description: OK
      tags:
        - Contacts
      description: Deletes one or more specified contacts. Returns the deleted contacts and a 200 status code if successful.
  '/contacts/{object_id}':
    get:
      summary: Get a Contact
      parameters:
        - $ref: '#/parameters/object_id'
      tags:
        - Contacts
      responses:
        '200':
          description: default
      operationId: Get_contact
      description: Retrieve a contact for a particular organization.
    patch:
      summary: Update a Contact
      parameters:
        - $ref: '#/parameters/object_id'
      operationId: Patch_contact
      responses:
        '200':
          description: OK
      tags:
        - Contacts
      description: |-
        Updates the details of an existing contact. Returns 422 Bad Request error if trying to update an externally synced record.

        A PATCH request does not require that the entire object resource with all of its attributes be enclosed. Any attributes you don't specify will remain unchanged.
  /countries:
    get:
      summary: List all Countries
      tags:
        - Countries
      responses:
        '200':
          description: default
      operationId: Get_countries
      description: Returns a list of supported countries.
  '/countries/{object_id}':
    get:
      summary: Get a Country
      parameters:
        - $ref: '#/parameters/object_id'
      tags:
        - Countries
      responses:
        '200':
          description: default
      operationId: Get_country
      description: Returns the details of one of the supported countries.
  /documents:
    patch:
      summary: Update multiple Documents
      operationId: Patch_documents
      responses:
        '200':
          description: OK
      description: |-
        Updates a list of items, also known as bulk updating.

        The bulk update PATCH format is one that is similar to the response returned from a GET on a list resource. It will accept a partial representation of objects, as long as the required parameters are present. Any attributes you don't specify will remain unchanged.

        Bulk updates using a nested relationships route are not supported.
      tags:
        - Documents
  '/documents/{object_id}':
    patch:
      summary: Update a Document
      operationId: Patch_document
      parameters:
        - $ref: '#/parameters/object_id'
      responses:
        '200':
          description: OK
      tags:
        - Documents
      description: |-
        Updates an existing document. Returns the updated object if successful.

        A PATCH request does not require that the entire object resource with all of its attributes be enclosed. Any attributes you don't specify will remain unchanged.
  /domains:
    get:
      summary: List Domains
      tags:
        - Domains
      responses:
        '200':
          description: default
      operationId: Get_domains
      description: Returns a list of domains for all organizations or for a specified organization.
  '/configurations/{parent_id}/relationships/configuration_interfaces/{object_id}':
    get:
      summary: Get a Configuration Interface
      parameters:
        - $ref: '#/parameters/parent_id'
        - $ref: '#/parameters/object_id'
      tags:
        - Configurations
        - Configuration Interfaces
      responses:
        '200':
          description: default
      operationId: Get_configuration_interface_from_parent
      description: Returns the details of an existing configuration interface.
definitions: {}
parameters:
  sort:
    name: sort
    in: query
    type: string
    required: false
    description: Sort order
  page-number:
    name: 'page[number]'
    in: query
    type: integer
    description: 'Return the Nth page based on page[size]'
  page-size:
    name: 'page[size]'
    in: query
    required: false
    type: integer
    default: 50
    description: Number of records to return in the List
  object_id:
    name: object_id
    in: path
    required: true
    type: integer
    description: ID of the object
  parent_id:
    name: parent_id
    in: path
    required: true
    type: integer
    description: ID of the parent object
responses: {}
securityDefinitions:
  API Key:
    type: apiKey
    in: header
    name: x-api-key
security:
  - API Key: []
tags:
  - name: Attachments
    description: |-
      An attachment refers to a file upload associated with an asset.
      This resource allows you to manage all attachments in your account. Note that attachments are accessed from the relevant endpoints (GET /configurations, GET /passwords, etc.) using the include=attachments parameter to return the file attachments in the relationships attributes of the requested objects. Example: /configurations/1?include=attachments
      An attachment can belong to only one asset. Each asset can have relationships with one or more attachments.
  - name: Configurations
    description: |-
      A configuration refers to a device you manage for a client organization.
      The Configurations resource allows you to manage information about all configurations in your account.
      A configuration can belong to only one organization. Each configuration can have a primary IP address, a primary MAC address, plus one or more additional IP and MAC addresses that are maintained in a separate Configuration Interfaces resource.
  - name: Contacts
    description: |-
      A contact refers to a contact in a client organization.
      The Contacts resource allows you to manage information about all contacts in your account.
      A contact can belong to only one organization. Each contact can have one location, which is maintained as a separate Locations resource.
  - name: Countries
    description: |-
      A country refers to any distinct national entity.
      The Countries resource allows you to retrieve information about the country names that IT Glue supports. Country IDs can be used to POST new locations.
      Supported countries may be referenced by one or more locations. Each location can have one country, but it's not required.
  - name: Documents
    description: The Documents resource allows you to manage documents on your account.
  - name: Domains
    description: |-
      A domain refers to a domain name, such as example.com.
      The Domains resource allows you to manage information about all domains in your account.
      A domain can belong to only one organization.
  - name: Organizations
    description: |-
      An organization refers to a client company.
      The Organizations resource is used to manage information about organizations in your account.
      Keep in mind that an organization can have one or more sub-organizations, but there is currently no support in the API for assigning a parent to create new sub-organizations. You would need to manually complete this task from your IT Glue account.
  - name: Configuration Types
    description: |-
      A configuration type refers to the type categorization of a configuration, usually a type of device.
      This resource is used to manage information about configuration types for your account. Configuration type IDs can be used to POST new configurations.
      A configuration type may be referenced by one or more configurations. It's required that each configuration item have one configuration type.
  - name: Configuration Interfaces
    description: |-
      A configuration interface refers to an IP address for a networked device.
      This resource allows you to manage all IP and MAC addresses associated with the configurations in your account. Configuration interface IDs can be used to POST new configurations.
      A configuration interface can belong to only one configuration and can have only one IP address and one MAC address. Each configuration can have relationships with one or more configuration interfaces, one of which will be a primary interface.
      Note that when a configuration is created or updated with a new primary IP or MAC address, this creates or updates the configuration Interface object. If the primary IP or MAC address in the configuration interface object is updated, this also updates the primary IP or MAC address on the configuration.
  - name: Configuration Statuses
    description: |-
      A configuration status refers to the status that can be maintained on a configuration, for example, active or inactive.
      This resource is used to manage information about configuration statuses for your account. Configuration status IDs can be used to POST new configurations.
      A configuration status may be referenced by one ore more configurations. Each configuration can have one configuration status, but it's not required.
  - name: Contact Types
    description: |-
      A contact type refers to the type categorization of a contact, for example, an approver or an owner.
      This resource is used to manage information about contact types for your account. Contact type IDs can be used to POST new contacts.
      A contact type may be referenced by one or more contacts. Each contact can have one contact type, but it's not required.
  - name: Organization Types
    description: |-
      An organization type refers to the type categorization of an organization, for example, customer or vendor.
      This resource is used to manage information about organization types for your account. Organization type IDs can be used to POST new organizations.
      A organization type may be referenced by one or more organizations. Each organization can have one organization type, but it's not required.
  - name: Organization Statuses
    description: |-
      An organization status refers to the status that can be maintained on an organization, for example, active or inactive.
      This resource is used to manage information about organization statuses for your account. Organization status IDs can be used to POST new organizations.
      An organization status may be referenced by one ore more organizations. Each organization can have one organization status, but it's not required.
  - name: Flexible Asset Types
    description: |-
      A flexible asset type refers to a set of custom fields that can be used to generate structured documentation.
      This resource lets you create and access information about the flexible asset types in your account. Flexible asset type IDs and flexible asset field name-key values can be used to POST new flexible assets.
      The different flexible asset types let you document different parts of the IT infrastructure. For example, LAN is one flexible asset type, Backup is another, and Email yet another.
      Note that when a flexible asset type is created with a flexible asset field, this creates a flexible asset field object. If the flexible asset field object is updated, this also updates the flexible asset type.
  - name: Flexible Asset Fields
    description: |-
      A flexible asset field refers to a field in a flexible asset type.
      This resource lets you manage all of the flexible asset fields in your account. The name-key attributes of fields can be used to POST new flexible assets.
      Each flexible asset field has, at most, one immediate parent flexible asset type, and may be created after or at the same time as a new flexible asset type. Note: To avoid POST/PATCH errors, make sure that the name and order attributes are unique. In other words, no two fields with the same parent flexible asset type can have identical values for name or order. It's also required that at least one field has show-in-list set to true.
      To explore the different fields that are available, refer to our Flexible asset field definitions article.